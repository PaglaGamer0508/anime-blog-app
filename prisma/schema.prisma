// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  username      String?   @unique
  email         String?   @unique
  emailVerified DateTime?
  image         String?

  posts Post[]

  account Account[]
  session Session[]

  Likes Like[]

  following Follow[] @relation("FollowedUser")
  followers Follow[] @relation("Follower")
}

model Follow {
  id String @id @default(cuid())

  follower   User   @relation("Follower", fields: [followerId], references: [id])
  followerId String

  followedUser   User   @relation("FollowedUser", fields: [followedUserId], references: [id])
  followedUserId String
}

model Post {
  id      String  @id @default(cuid())
  image   String?
  title   String
  content Json?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Author   User?   @relation(fields: [AuthorId], references: [id])
  AuthorId String?

  Likes Like[]

  genres Genres[]

  type Type @default(GENERAL)
}

model Like {
  id String @id @default(cuid())

  author   User   @relation(fields: [authorId], references: [id])
  authorId String

  post   Post   @relation(fields: [postId], references: [id])
  postId String
}

enum Type {
  GENERAL
  REVIEW
  CHARACTER
}

enum Genres {
  ACTION
  ADVENTURE
  ROMANCE
  SHOUJO
  COMEDY
  DRAMA
  FANTASY
  HORROR
  MAGIC
  MECHA
  MYSTERY
  SCI_FI
  SUPERNATURAL
  THRILLER
  SPORTS
  PSYCHOLOGICAL
  HISTORICAL
  MILITARY
  MUSIC
  SLICE_OF_LIFE
  HAREM
  ISEKAI
  SEINEN
  SHOUNEN
  JOSEI
  ECCHI
  HENTAI
  MAGICAL_GIRL
  VAMPIRE
  ZOMBIE
}
